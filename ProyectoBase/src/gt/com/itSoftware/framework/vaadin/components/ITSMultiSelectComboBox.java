package gt.com.itSoftware.framework.vaadin.components;

import java.util.Collection;
import java.util.List;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.event.LayoutEvents.LayoutClickEvent;
import com.vaadin.event.LayoutEvents.LayoutClickListener;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.NativeSelect;
import com.vaadin.ui.PopupView;
import com.vaadin.ui.PopupView.PopupVisibilityEvent;

public class ITSMultiSelectComboBox extends CustomComponent implements PopupView.PopupVisibilityListener  {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	
	private static final long serialVersionUID = 1L;
	@AutoGenerated
	private HorizontalLayout mainLayout;
	@AutoGenerated
	private NativeSelect nativeSelect_1;
	private PopupView popup = null;
	private ITSMultiSelect select = null;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public ITSMultiSelectComboBox() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		
		select  = new ITSMultiSelect();
		
		nativeSelect_1.setNullSelectionAllowed(false);
		popup = new PopupView("",select);		
		popup.setHideOnMouseOut(false);
		popup.addListener(this);
		mainLayout.addComponent(popup);
		mainLayout.setExpandRatio(nativeSelect_1, 1);	
		mainLayout.addLayoutClickListener(new LayoutClickListener() {
			
			private static final long serialVersionUID = 1L;

			@Override
			public void layoutClick(LayoutClickEvent event) {
				popup.setPopupVisible(true);
				select.focus();
			}
		});
	}

	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		//mainLayout.setMargin(true);
		
		// top-level component properties
		setHeight("22px");
				
		// nativeSelect_1
		nativeSelect_1 = new NativeSelect();
		nativeSelect_1.setImmediate(true);
		nativeSelect_1.setWidth("100.0%");
		nativeSelect_1.setHeight("100.0%");
		mainLayout.addComponent(nativeSelect_1);
		mainLayout.setComponentAlignment(nativeSelect_1, new Alignment(48));
			
		return mainLayout;
	}

	@Override
	public void popupVisibilityChange(PopupVisibilityEvent event) {
		if (!event.isPopupVisible()) {            
			/*Collection<?> salida = select.getSelectedItems();
			nativeSelect_1.removeAllItems();			
			if (!salida.isEmpty()){
				nativeSelect_1.addItem(salida);
				nativeSelect_1.select(salida);
			}else{
				nativeSelect_1.select(null);
			}*/
			configuraSeleccionados();
		}				
	}
	
	private void configuraSeleccionados(){
		
			 
			Collection<?> salida = select.getSelectedItems();
			if (nativeSelect_1.getValue() != null  && salida.containsAll((Collection<?>) nativeSelect_1.getValue())){
				return;
			}
			
			nativeSelect_1.removeAllItems();			
			if (!salida.isEmpty()){
				nativeSelect_1.addItem(salida);
				nativeSelect_1.select(salida);
			}else{
				nativeSelect_1.select(null);
			}
		
	}
	
	public void setTextoOpcionTodos (String texto){
		select.setCaption(texto);
	}
	
	public void addItem(Object item){
		select.addItem(item);
	}
	
	
	
	public void addItem(List<Object> items){
		select.addItem(items);
	}
	
	public Collection<?> getAllItems(){
		return select.getAllItems();
	}
	
	public Collection<?>  getSelectedItems(){
		return select.getSelectedItems();
	}
	
	public void selectAll (){
		select.selectAll();
		configuraSeleccionados();
	}
	
	public void unSelectAll (){
		select.unSelectAll();
		configuraSeleccionados();
	}
	
	public void setSelectedItems (Object ... itemIds){	
		select.setSelectedItems(itemIds);
	}
	
	public void setPopupHeight(String height) {
		select.setHeight(height);
	}
	
	public void setPopupWidth(String width) {
		select.setWidth(width);
	}
	
	public void removeAllItems(){
		this.select.removeAllItems();
	}
	
	public void removeItem(Object itemId ){
		this.select.removeItem(itemId);
	}	
	
	public void addValueChangeListener(ValueChangeListener listener){
		nativeSelect_1.addValueChangeListener(listener);
	}
}
